Search.setIndex({"docnames": ["TFiltersPy", "TFiltersPy.state_estimation", "TFiltersPy.utils", "api_usage", "examples_index", "index", "modules"], "filenames": ["TFiltersPy.rst", "TFiltersPy.state_estimation.rst", "TFiltersPy.utils.rst", "api_usage.rst", "examples_index.rst", "index.rst", "modules.rst"], "titles": ["tfilterspy package", "tfilterspy.state_estimation package", "tfilterspy.utils package", "API Reference", "Real World Use Cases\ud83c\udfa2", "Features", "TFilterPy"], "terms": {"class": [0, 1, 2, 5], "baseestim": [0, 2, 3, 6], "name": 0, "none": 0, "sourc": [0, 1, 2], "base": [0, 1, 2], "object": 0, "all": [0, 1, 3, 5], "estim": [0, 1, 2, 3, 5], "tfilterpi": 0, "provid": 0, "common": 0, "function": [0, 1, 2], "paramet": [0, 1, 2, 3], "handl": [0, 3], "valid": [0, 1, 2, 3], "get_param": [0, 6], "deep": 0, "true": [0, 1], "get": [0, 3, 5], "bool": 0, "If": [0, 1, 5], "retriev": 0, "nest": 0, "return": [0, 1], "A": [0, 1, 2, 3], "dictionari": 0, "map": [0, 1], "valu": 0, "type": [0, 1], "dict": 0, "set_param": [0, 6], "param": 0, "set": [0, 3, 5], "arbitrari": 0, "keyword": 0, "argument": 0, "instanc": [0, 1], "itself": 0, "self": [0, 1], "static": 0, "to_dask_arrai": [0, 6], "numpy_arrai": 0, "chunk_siz": [0, 1], "convert": [0, 3], "numpi": [0, 3], "arrai": [0, 1, 2, 3], "dask": [0, 1, 3, 5], "specifi": [0, 1, 2], "chunk": 0, "i": [0, 1, 3, 5], "us": [0, 1, 2, 3], "": [0, 2, 3, 5], "automat": [0, 3], "np": [0, 1], "ndarrai": [0, 1], "input": [0, 1], "int": [0, 1, 2], "tupl": [0, 1, 2], "option": [0, 1], "desir": 0, "size": 0, "version": 0, "da": [0, 1], "validate_matric": [0, 6], "matric": 0, "have": 0, "consist": 0, "shape": [0, 1], "matrix": [0, 1], "rais": [0, 1], "valueerror": [0, 1], "ar": [0, 1, 3], "inconsist": 0, "python": [0, 5], "state": [0, 1, 3, 5], "kalman": [0, 1, 2, 3, 5], "filter": [0, 1, 2, 3, 4, 5], "particl": [0, 1, 3, 5], "nonlinear": [0, 1, 3, 5], "daskkalmanfilt": [0, 1, 3, 6], "state_transition_matrix": [0, 1], "observation_matrix": [0, 1], "process_noise_cov": [0, 1], "observation_noise_cov": [0, 1], "initial_st": [0, 1], "initial_covari": [0, 1], "64": [0, 1], "estimation_strategi": [0, 1, 2], "str": [0, 1, 2], "residual_analysi": [0, 1, 2], "parameterestim": [0, 1, 2, 3], "implement": [0, 1, 5], "support": [0, 1], "distribut": [0, 1, 3, 5], "comput": [0, 1, 5], "larg": [0, 1], "dataset": [0, 1, 3], "thi": [0, 1, 5], "extend": [0, 1, 3], "process": [0, 1, 2, 3], "nois": [0, 1, 2, 3, 5], "covari": [0, 1, 2], "q": [0, 1, 2], "observ": [0, 1, 2], "r": [0, 1, 2], "while": [0, 1], "appli": [0, 1], "incom": [0, 1], "measur": [0, 1, 2, 3], "The": [0, 1, 3], "recurs": [0, 1], "algorithm": [0, 1, 3], "linear": [0, 1, 3, 5], "dynam": [0, 1, 5], "system": [0, 1, 3, 5], "from": [0, 1, 3, 5], "noisi": [0, 1, 5], "leverag": [0, 1, 3, 5], "scale": [0, 1], "across": [0, 1], "n_featur": [0, 1], "transit": [0, 1], "f": [0, 1], "repres": [0, 1], "how": [0, 1], "evolv": [0, 1], "between": [0, 1], "n_observ": [0, 1], "h": [0, 1], "space": [0, 1], "initi": [0, 1, 3], "vector": [0, 1], "x0": [0, 1], "p0": [0, 1], "uncertainti": [0, 1, 5], "default": [0, 1], "strategi": [0, 1, 2, 3], "can": [0, 1, 3], "one": [0, 1], "mle": [0, 1, 2], "cross_valid": [0, 1], "adaptive_filt": [0, 1], "dimens": [0, 1], "do": [0, 1, 3], "conform": [0, 1], "requir": [0, 1], "refer": [0, 1, 2, 5], "welch": [0, 1, 2], "g": [0, 1, 2], "bishop": [0, 1, 2], "1995": [0, 1, 2], "an": [0, 1, 2], "introduct": [0, 1, 2], "estimate_paramet": [0, 1, 2, 3, 6], "n_timestep": [0, 1], "over": [0, 1, 2], "time": [0, 1, 2], "note": [0, 1, 5], "method": [0, 1, 2, 3, 5], "call": [0, 1], "appropri": [0, 1], "parent": [0, 1], "avail": [0, 1], "includ": [0, 1, 2], "residu": [0, 1, 2, 3], "analysi": [0, 1, 2, 3], "cross": [0, 1, 2, 3], "adapt": [0, 1, 2, 3], "fit": [0, 1, 3, 6], "x": [0, 1], "prepar": [0, 1], "store": [0, 1], "2": [0, 1], "dimension": [0, 1], "predict": [0, 1, 3, 6], "perform": [0, 1], "step": [0, 1, 6], "construct": [0, 1], "graph": [0, 1], "entir": [0, 1], "sequenc": [0, 1, 3], "parallel": [0, 1], "delai": [0, 1], "execut": [0, 1], "state_estim": 0, "each": [0, 1, 3], "oper": [0, 1], "two": [0, 1], "updat": [0, 1, 6], "made": [0, 1], "gain": [0, 1], "k": [0, 1, 2], "multipl": [0, 1], "run_filt": [0, 1, 3, 6], "timelin": [0, 1], "differ": [0, 1, 2], "innov": [0, 1, 2], "dasknonlinearkalmanfilt": [0, 1, 6], "daskparticlefilt": [0, 1, 6], "state_transit": [0, 1], "observation_model": [0, 1], "num_particl": [0, 1], "1000": [0, 1], "use_dask": [0, 1], "multivari": [0, 1], "scalabl": [0, 1, 5], "inherit": [0, 1], "estimate_st": [0, 1, 6], "5": [0, 1, 2], "weight": [0, 1], "averag": [0, 1], "propag": [0, 1], "model": [0, 1], "plu": [0, 1], "gaussian": [0, 1, 3, 5], "resampl": [0, 1, 6], "4": [0, 1], "multinomi": [0, 1], "refocu": [0, 1], "high": [0, 1], "probabl": [0, 1, 3], "routin": [0, 1], "It": [0, 1, 3], "should": [0, 1], "run": [0, 1, 5], "both": [0, 1], "n_ob": [0, 1], "n_state": [0, 1], "predicted_measur": [0, 1], "same": [0, 1], "For": [0, 1, 3, 4, 5], "simpl": [0, 1, 3], "exampl": [0, 1, 4, 5], "we": [0, 1, 3], "sequenti": [0, 1], "6": [0, 1], "iter": [0, 1], "full": [0, 1, 3, 4, 5], "cycl": [0, 1], "3": [0, 1], "likelihood": [0, 1, 2, 3], "contain": 1, "maximum": [2, 3], "haykin": 2, "2001": 2, "neural": 2, "network": 2, "estimate_with_adaptive_filt": 2, "estimate_with_cross_valid": 2, "k_fold": 2, "fold": 2, "estimate_with_ml": 2, "max_iter": 2, "estimate_with_residual_analysi": 2, "optim": [2, 3], "welcom": [3, 4, 5], "tfilterspi": [3, 5, 6], "where": [3, 4, 5], "fun": [3, 5], "just": [3, 5], "like": [3, 5], "scikit": 3, "learn": 3, "ve": 3, "kept": 3, "our": [3, 4, 5], "intuit": 3, "so": 3, "you": [3, 5], "focu": 3, "crunch": 3, "number": 3, "without": 3, "bore": 3, "bit": 3, "here": 3, "help": 3, "tame": 3, "unruli": 3, "data": [3, 5], "rang": 3, "whether": [3, 5], "re": [3, 5], "wizard": 3, "champion": 3, "chao": 3, "design": 3, "straightforward": 3, "possibl": 3, "train": 3, "your": [3, 4, 5], "think": 3, "up": 3, "magic": [3, 4, 5], "wave": 3, "wand": 3, "gener": 3, "new": [3, 5], "extravaganza": 3, "let": [3, 5], "figur": 3, "out": [3, 4, 5], "becaus": 3, "who": 3, "want": [3, 5], "manual": 3, "foundat": 3, "manag": 3, "even": 3, "some": 3, "neat": 3, "util": 3, "trick": 3, "more": 3, "advanc": 3, "add": 3, "bayesian": [3, 5], "massiv": 3, "eas": 3, "effici": 3, "eleg": 3, "particlefilt": 3, "when": [3, 5], "too": 3, "wild": 3, "swarm": 3, "track": 3, "non": [3, 5], "herd": 3, "cat": 3, "nitti": 3, "gritti": 3, "check": [3, 4, 5], "modul": [3, 5, 6], "doc": 3, "below": 3, "No": [3, 5], "need": [3, 5], "bog": 3, "down": 3, "boilerpl": 3, "done": 3, "minim": 3, "fuss": 3, "extens": 3, "custom": 3, "suit": 3, "uniqu": 3, "adventur": [3, 5], "built": [3, 5], "work": [3, 5], "largest": 3, "index": [3, 5], "search": [3, 5], "page": 3, "notebook": [4, 5], "playground": [4, 5], "jupyt": [4, 5], "come": [4, 5], "life": [4, 5], "show": [4, 5], "off": [4, 5], "list": [4, 5], "them": [4, 5], "github": [4, 5], "visit": [4, 5], "directori": [4, 5], "favorit": 5, "librari": 5, "art": 5, "techniqu": 5, "sound": 5, "cool": 5, "parti": 5, "sai": 5, "code": 5, "my": 5, "own": 5, "robust": 5, "quantif": 5, "assess": 5, "confid": 5, "todo": 5, "start": 5, "easi": 5, "pi": 5, "complic": 5, "ritual": 5, "secret": 5, "handshak": 5, "open": 5, "termin": 5, "pip": 5, "That": 5, "In": 5, "flash": 5, "prefer": 5, "tinker": 5, "under": 5, "hood": 5, "feel": 5, "clone": 5, "repo": 5, "edit": 5, "mode": 5, "git": 5, "http": 5, "com": 5, "leparalamapara": 5, "cd": 5, "e": 5, "now": 5, "begin": 5, "enjoi": 5, "transform": 5, "clear": 5, "insight": 5, "api": 5, "overview": 5, "kei": 5, "concept": 5, "detail": 5, "document": 5, "indic": 5, "tabl": 5, "packag": 6, "subpackag": 6, "submodul": 6, "base_estim": 6, "content": 6}, "objects": {"": [[0, 0, 0, "-", "tfilterspy"]], "tfilterspy": [[0, 1, 1, "", "DaskKalmanFilter"], [0, 1, 1, "", "DaskNonLinearKalmanFilter"], [0, 1, 1, "", "DaskParticleFilter"], [0, 0, 0, "-", "base_estimator"], [1, 0, 0, "-", "state_estimation"], [2, 0, 0, "-", "utils"]], "tfilterspy.DaskKalmanFilter": [[0, 2, 1, "", "estimate_parameters"], [0, 2, 1, "", "fit"], [0, 2, 1, "", "predict"], [0, 2, 1, "", "run_filter"]], "tfilterspy.DaskParticleFilter": [[0, 2, 1, "", "estimate_state"], [0, 2, 1, "", "predict"], [0, 2, 1, "", "resample"], [0, 2, 1, "", "run_filter"], [0, 2, 1, "", "step"], [0, 2, 1, "", "update"]], "tfilterspy.base_estimator": [[0, 1, 1, "", "BaseEstimator"]], "tfilterspy.base_estimator.BaseEstimator": [[0, 2, 1, "", "get_params"], [0, 2, 1, "", "set_params"], [0, 2, 1, "", "to_dask_array"], [0, 2, 1, "", "validate_matrices"]], "tfilterspy.state_estimation": [[1, 1, 1, "", "DaskKalmanFilter"], [1, 1, 1, "", "DaskNonLinearKalmanFilter"], [1, 1, 1, "", "DaskParticleFilter"], [1, 0, 0, "-", "particle_filters"]], "tfilterspy.state_estimation.DaskKalmanFilter": [[1, 2, 1, "", "estimate_parameters"], [1, 2, 1, "", "fit"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "run_filter"]], "tfilterspy.state_estimation.DaskParticleFilter": [[1, 2, 1, "", "estimate_state"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "resample"], [1, 2, 1, "", "run_filter"], [1, 2, 1, "", "step"], [1, 2, 1, "", "update"]], "tfilterspy.state_estimation.particle_filters": [[1, 1, 1, "", "DaskParticleFilter"]], "tfilterspy.state_estimation.particle_filters.DaskParticleFilter": [[1, 2, 1, "", "estimate_state"], [1, 2, 1, "", "predict"], [1, 2, 1, "", "resample"], [1, 2, 1, "", "run_filter"], [1, 2, 1, "", "step"], [1, 2, 1, "", "update"]], "tfilterspy.utils": [[2, 1, 1, "", "ParameterEstimator"], [2, 0, 0, "-", "optimisation_utils"]], "tfilterspy.utils.ParameterEstimator": [[2, 2, 1, "", "estimate_parameters"], [2, 2, 1, "", "estimate_with_adaptive_filtering"], [2, 2, 1, "", "estimate_with_cross_validation"], [2, 2, 1, "", "estimate_with_mle"], [2, 2, 1, "", "estimate_with_residual_analysis"]], "tfilterspy.utils.optimisation_utils": [[2, 1, 1, "", "ParameterEstimator"]], "tfilterspy.utils.optimisation_utils.ParameterEstimator": [[2, 2, 1, "", "estimate_parameters"], [2, 2, 1, "", "estimate_with_adaptive_filtering"], [2, 2, 1, "", "estimate_with_cross_validation"], [2, 2, 1, "", "estimate_with_mle"], [2, 2, 1, "", "estimate_with_residual_analysis"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"tfilterspi": [0, 1, 2], "packag": [0, 1, 2], "subpackag": 0, "submodul": [0, 1, 2], "base_estim": 0, "modul": [0, 1, 2], "content": [0, 1, 2, 5], "state_estim": 1, "linear_filt": 1, "nonlinear_filt": 1, "particle_filt": 1, "util": 2, "optimisation_util": 2, "api": 3, "refer": 3, "overview": 3, "kei": 3, "concept": 3, "class": 3, "detail": 3, "document": 3, "addit": [3, 5], "note": 3, "indic": 3, "tabl": 3, "real": [4, 5], "world": [4, 5], "us": [4, 5], "case": [4, 5], "featur": 5, "instal": 5, "resourc": 5, "tfilterpi": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"tfilterspy package": [[0, "tfilterspy-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"]], "tfilterspy.base_estimator module": [[0, "tfilterspy-base-estimator-module"]], "Module contents": [[0, "module-tfilterspy"], [1, "module-tfilterspy.state_estimation"], [2, "module-tfilterspy.utils"]], "tfilterspy.state_estimation package": [[1, "tfilterspy-state-estimation-package"]], "tfilterspy.state_estimation.linear_filters module": [[1, "tfilterspy-state-estimation-linear-filters-module"]], "tfilterspy.state_estimation.nonlinear_filters module": [[1, "tfilterspy-state-estimation-nonlinear-filters-module"]], "tfilterspy.state_estimation.particle_filters module": [[1, "tfilterspy-state-estimation-particle-filters-module"]], "tfilterspy.utils package": [[2, "tfilterspy-utils-package"]], "tfilterspy.utils.optimisation_utils module": [[2, "tfilterspy-utils-optimisation-utils-module"]], "API Reference": [[3, "api-reference"]], "Overview": [[3, "overview"]], "Key Concepts:": [[3, "key-concepts"]], "Key Classes": [[3, "key-classes"]], "Detailed Documentation": [[3, "detailed-documentation"]], "Additional Notes": [[3, "additional-notes"]], "Indices and Tables": [[3, "indices-and-tables"]], "Real World Use Cases\ud83c\udfa2": [[4, "real-world-use-cases"], [5, "real-world-use-cases"]], "Features": [[5, "features"]], "Installation": [[5, "installation"]], "Contents:": [[5, null]], "Additional Resources": [[5, "additional-resources"]], "TFilterPy": [[6, "tfilterpy"]]}, "indexentries": {"baseestimator (class in tfilterspy.base_estimator)": [[0, "tfilterspy.base_estimator.BaseEstimator"]], "daskkalmanfilter (class in tfilterspy)": [[0, "tfilterspy.DaskKalmanFilter"]], "dasknonlinearkalmanfilter (class in tfilterspy)": [[0, "tfilterspy.DaskNonLinearKalmanFilter"]], "daskparticlefilter (class in tfilterspy)": [[0, "tfilterspy.DaskParticleFilter"]], "estimate_parameters() (tfilterspy.daskkalmanfilter method)": [[0, "tfilterspy.DaskKalmanFilter.estimate_parameters"]], "estimate_state() (tfilterspy.daskparticlefilter method)": [[0, "tfilterspy.DaskParticleFilter.estimate_state"]], "fit() (tfilterspy.daskkalmanfilter method)": [[0, "tfilterspy.DaskKalmanFilter.fit"]], "get_params() (tfilterspy.base_estimator.baseestimator method)": [[0, "tfilterspy.base_estimator.BaseEstimator.get_params"]], "module": [[0, "module-tfilterspy"], [0, "module-tfilterspy.base_estimator"], [1, "module-tfilterspy.state_estimation"], [1, "module-tfilterspy.state_estimation.particle_filters"], [2, "module-tfilterspy.utils"], [2, "module-tfilterspy.utils.optimisation_utils"]], "predict() (tfilterspy.daskkalmanfilter method)": [[0, "tfilterspy.DaskKalmanFilter.predict"]], "predict() (tfilterspy.daskparticlefilter method)": [[0, "tfilterspy.DaskParticleFilter.predict"]], "resample() (tfilterspy.daskparticlefilter method)": [[0, "tfilterspy.DaskParticleFilter.resample"]], "run_filter() (tfilterspy.daskkalmanfilter method)": [[0, "tfilterspy.DaskKalmanFilter.run_filter"]], "run_filter() (tfilterspy.daskparticlefilter method)": [[0, "tfilterspy.DaskParticleFilter.run_filter"]], "set_params() (tfilterspy.base_estimator.baseestimator method)": [[0, "tfilterspy.base_estimator.BaseEstimator.set_params"]], "step() (tfilterspy.daskparticlefilter method)": [[0, "tfilterspy.DaskParticleFilter.step"]], "tfilterspy": [[0, "module-tfilterspy"]], "tfilterspy.base_estimator": [[0, "module-tfilterspy.base_estimator"]], "to_dask_array() (tfilterspy.base_estimator.baseestimator static method)": [[0, "tfilterspy.base_estimator.BaseEstimator.to_dask_array"]], "update() (tfilterspy.daskparticlefilter method)": [[0, "tfilterspy.DaskParticleFilter.update"]], "validate_matrices() (tfilterspy.base_estimator.baseestimator method)": [[0, "tfilterspy.base_estimator.BaseEstimator.validate_matrices"]], "daskkalmanfilter (class in tfilterspy.state_estimation)": [[1, "tfilterspy.state_estimation.DaskKalmanFilter"]], "dasknonlinearkalmanfilter (class in tfilterspy.state_estimation)": [[1, "tfilterspy.state_estimation.DaskNonLinearKalmanFilter"]], "daskparticlefilter (class in tfilterspy.state_estimation)": [[1, "tfilterspy.state_estimation.DaskParticleFilter"]], "daskparticlefilter (class in tfilterspy.state_estimation.particle_filters)": [[1, "tfilterspy.state_estimation.particle_filters.DaskParticleFilter"]], "estimate_parameters() (tfilterspy.state_estimation.daskkalmanfilter method)": [[1, "tfilterspy.state_estimation.DaskKalmanFilter.estimate_parameters"]], "estimate_state() (tfilterspy.state_estimation.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.DaskParticleFilter.estimate_state"]], "estimate_state() (tfilterspy.state_estimation.particle_filters.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.particle_filters.DaskParticleFilter.estimate_state"]], "fit() (tfilterspy.state_estimation.daskkalmanfilter method)": [[1, "tfilterspy.state_estimation.DaskKalmanFilter.fit"]], "predict() (tfilterspy.state_estimation.daskkalmanfilter method)": [[1, "tfilterspy.state_estimation.DaskKalmanFilter.predict"]], "predict() (tfilterspy.state_estimation.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.DaskParticleFilter.predict"]], "predict() (tfilterspy.state_estimation.particle_filters.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.particle_filters.DaskParticleFilter.predict"]], "resample() (tfilterspy.state_estimation.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.DaskParticleFilter.resample"]], "resample() (tfilterspy.state_estimation.particle_filters.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.particle_filters.DaskParticleFilter.resample"]], "run_filter() (tfilterspy.state_estimation.daskkalmanfilter method)": [[1, "tfilterspy.state_estimation.DaskKalmanFilter.run_filter"]], "run_filter() (tfilterspy.state_estimation.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.DaskParticleFilter.run_filter"]], "run_filter() (tfilterspy.state_estimation.particle_filters.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.particle_filters.DaskParticleFilter.run_filter"]], "step() (tfilterspy.state_estimation.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.DaskParticleFilter.step"]], "step() (tfilterspy.state_estimation.particle_filters.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.particle_filters.DaskParticleFilter.step"]], "tfilterspy.state_estimation": [[1, "module-tfilterspy.state_estimation"]], "tfilterspy.state_estimation.particle_filters": [[1, "module-tfilterspy.state_estimation.particle_filters"]], "update() (tfilterspy.state_estimation.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.DaskParticleFilter.update"]], "update() (tfilterspy.state_estimation.particle_filters.daskparticlefilter method)": [[1, "tfilterspy.state_estimation.particle_filters.DaskParticleFilter.update"]], "parameterestimator (class in tfilterspy.utils)": [[2, "tfilterspy.utils.ParameterEstimator"]], "parameterestimator (class in tfilterspy.utils.optimisation_utils)": [[2, "tfilterspy.utils.optimisation_utils.ParameterEstimator"]], "estimate_parameters() (tfilterspy.utils.parameterestimator method)": [[2, "tfilterspy.utils.ParameterEstimator.estimate_parameters"]], "estimate_parameters() (tfilterspy.utils.optimisation_utils.parameterestimator method)": [[2, "tfilterspy.utils.optimisation_utils.ParameterEstimator.estimate_parameters"]], "estimate_with_adaptive_filtering() (tfilterspy.utils.parameterestimator method)": [[2, "tfilterspy.utils.ParameterEstimator.estimate_with_adaptive_filtering"]], "estimate_with_adaptive_filtering() (tfilterspy.utils.optimisation_utils.parameterestimator method)": [[2, "tfilterspy.utils.optimisation_utils.ParameterEstimator.estimate_with_adaptive_filtering"]], "estimate_with_cross_validation() (tfilterspy.utils.parameterestimator method)": [[2, "tfilterspy.utils.ParameterEstimator.estimate_with_cross_validation"]], "estimate_with_cross_validation() (tfilterspy.utils.optimisation_utils.parameterestimator method)": [[2, "tfilterspy.utils.optimisation_utils.ParameterEstimator.estimate_with_cross_validation"]], "estimate_with_mle() (tfilterspy.utils.parameterestimator method)": [[2, "tfilterspy.utils.ParameterEstimator.estimate_with_mle"]], "estimate_with_mle() (tfilterspy.utils.optimisation_utils.parameterestimator method)": [[2, "tfilterspy.utils.optimisation_utils.ParameterEstimator.estimate_with_mle"]], "estimate_with_residual_analysis() (tfilterspy.utils.parameterestimator method)": [[2, "tfilterspy.utils.ParameterEstimator.estimate_with_residual_analysis"]], "estimate_with_residual_analysis() (tfilterspy.utils.optimisation_utils.parameterestimator method)": [[2, "tfilterspy.utils.optimisation_utils.ParameterEstimator.estimate_with_residual_analysis"]], "tfilterspy.utils": [[2, "module-tfilterspy.utils"]], "tfilterspy.utils.optimisation_utils": [[2, "module-tfilterspy.utils.optimisation_utils"]]}})